@model Orders_StatusesViewModel

@{
	ViewData["Title"] = "Order Management";
}

<div class="container-fluid px-4 mt-4">
	<div class="card mb-4">
		@* ----------------------------------- filter form and refresh *@
		<div class="card-header">
			<div class="d-flex justify-content-between align-items-center mb-3">
				<div>
					<i class="bi bi-cart3 me-1"></i>
					Order Management
				</div>
				<a href="@Url.Action("AllOrders", "Operations")" class="btn btn-sm btn-outline-primary" id="refreshOrdersBtn">
					<i class="bi bi-arrow-clockwise"></i> Refresh
				</a>
			</div>

			<form id="filterForm" method="get" asp-action="AllOrders" asp-controller="Operations" asp-area="Admin" class="row g-3 align-items-end">
				<div class="col-md-6">
					<label for="orderStatusFilter" class="form-label visually-hidden">Filter by Status</label>
					<select class="form-select py-2" name="orderStatus" id="orderStatusFilter">
						<option value="">All Statuses</option>
						@if (Model.OrderStatus != null)
						{
							@foreach (var orderStatus in Model.OrderStatus)
							{
								<option value="@orderStatus.Value" selected="@(orderStatus.Value == Model.Status)">@orderStatus.Text</option>
							}
						}
					</select>
				</div>

				<div class="col-md-4 d-flex align-items-center gap-2">
					<button type="submit" class="btn btn-primary px-4 py-2 flex-grow-1">
						<i class="bi bi-funnel me-2"></i>Filter
					</button>
					<a href="@Url.Action("AllOrders", "Operations")" class="btn btn-outline-secondary px-4 py-2">
						<i class="bi bi-arrow-counterclockwise"></i>
					</a>
				</div>
			</form>
		</div>
		<div class="card-body">
			<div class="table-responsive">
				@if (Model != null && Model.Orders!.Count() > 0)
				{
					<table id="ordersTable" class="table table-striped table-hover border">
						@* ---------------------------- list header *@
						<thead class="table-dark">
							<tr>
								<th>Order #</th>
								<th>Date</th>
								<th>Customer</th>
								<th>Contact</th>
								<th>Order Status</th>
								<th>Payment</th>
								<th>Amount</th>
								<th class="text-center">Actions</th>
							</tr>
						</thead>
						@* ---------------------------- list body *@
						<tbody>
							@foreach (var order in Model.Orders!)
							{
								<tr class="order-row"
									data-order-id="@order.Id"
									data-status="@order.OrderStatus.StatusName!.ToLower()"
									data-payment="@(order.IsPaid ? "paid" : "unpaid")">
									<td><span class="fw-bold">#@order.Id</span></td>
									<td>@order.CreateDate.ToString("MMM dd, yyyy")</td>
									<td>
										<div class="fw-bold">@order.Name</div>
										<div class="small text-muted text-truncate" style="max-width: 200px;">@order.Address</div>
									</td>
									<td>
										<div>@order.MobileNumber</div>
										<div class="small text-muted">@order.Email</div>
									</td>
									<td>
										@{
											string statusClass = order.OrderStatus.StatusName.ToLower() switch
											{
												"pending" => "bg-warning",
												"processing" => "bg-info",
												"shipped" => "bg-primary",
												"delivered" => "bg-success",
												"cancelled" => "bg-danger",
												_ => "bg-secondary"
											};
										}
										<span class="badge @statusClass">@order.OrderStatus.StatusName</span>
									</td>
									<td>
										@if (order.IsPaid)
										{
											<span class="badge bg-success">Paid</span>
										}
										else
										{
											<span class="badge bg-danger">Unpaid</span>
										}
										<div>@order.PaymentMethod</div>
									</td>
									<td>
										<span class="fw-bold">
											$@(order.OrderDetail?.Sum(x => (x.UnitPrice > 0 && x.Quantity > 0 ? x.UnitPrice * x.Quantity : 0)).ToString("F2") ?? "0.00")
										</span>
									</td>
									<td>
										<div class="d-flex justify-content-center">
											<button class="btn btn-sm btn-outline-primary view-details-btn me-1" data-order-id="@order.Id" title="View Details" data-bs-toggle="modal" data-bs-target="#modal-@order.Id">
												<i class="bi bi-eye"></i>
											</button>
											@* ----------------------------------------- Action Dropdown *@
											<div class="dropdown">
												<button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
													<i class="bi bi-gear"></i>
												</button>
												<ul class="dropdown-menu dropdown-menu-end">
													<li>
														<a asp-action="UpdateOrderStatus" asp-route-orderId="@order.Id" class="dropdown-item change-status-btn" data-order-id="@order.Id">
															<i class="bi bi-arrow-left-right me-2"></i>Change Status
														</a>
													</li>
													<li>
														<a asp-action="TogglePaymentStatus" asp-route-orderId="@order.Id" class="dropdown-item toggle-payment-btn" data-order-id="@order.Id" data-is-paid="@order.IsPaid.ToString().ToLower()">
															<i class="bi bi-cash-coin me-2"></i>
															@(order.IsPaid ? "Mark as Unpaid" : "Mark as Paid")
														</a>
													</li>
													<li><hr class="dropdown-divider"></li>

													@* print PDF for order invoice  *@
													<li>
														<button class="dropdown-item text-primary print-invoice-btn" data-order-id="@order.Id">
															<i class="bi bi-printer me-2"></i>Print Invoice
														</button>
													</li>
													<li>
														<button class="dropdown-item text-danger" data-bs-toggle="modal" data-bs-target="#deleteOrderModal" data-order-id="@order.Id">
															<i class="bi bi-trash me-2"></i>Delete Order
														</button>
													</li>
												</ul>
											</div>
										</div>

										@* Order details modal will be included via partial view *@
										@await Html.PartialAsync("/Views/Shared/_OrderDetailModel.cshtml", new OrderDetailDto { DivId = order.Id, OrderDetail = order.OrderDetail })
									</td>
								</tr>
							}
						</tbody>
					</table>

					@* ----------------------------------- pagination *@
					<div class="mt-3">
						<nav aria-label="Page navigation">
							<ul class="pagination justify-content-center">
								<li class="page-item disabled"><a class="page-link" href="#" tabindex="-1">Previous</a></li>
								<li class="page-item active"><a class="page-link" href="#">1</a></li>
								<li class="page-item"><a class="page-link" href="#">2</a></li>
								<li class="page-item"><a class="page-link" href="#">3</a></li>
								<li class="page-item"><a class="page-link" href="#">Next</a></li>
							</ul>
						</nav>
					</div>
				}
				else
				{
					<div class="alert alert-info text-center p-5">
						<i class="bi bi-info-circle fs-1 mb-3"></i>
						<h5>No Orders Found</h5>
						<p class="mb-0">There are currently no orders in the system.</p>
					</div>
				}
			</div>
		</div>
		<div class="card-footer small text-muted">Updated @DateTime.Now.ToString("MMM dd, yyyy hh:mm tt")</div>
	</div>
</div>

<!-- Delete Order Confirmation Modal -->
<div class="modal fade" id="deleteOrderModal" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header bg-danger text-white">
				<h5 class="modal-title">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>Are you sure you want to delete this order? This action cannot be undone.</p>
				<input type="hidden" id="orderIdToDelete" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete Order</button>
			</div>
		</div>
	</div>
</div>


@section Scripts {
	<script>
		$(document).ready(function() {
			// View Order Details Button Click Handler
			$('.view-details-btn').on('click', function() {
				const orderId = $(this).data('order-id');
				$(`#orderDetail${orderId}`).modal('show');
			});

			// Change Status Button Click Handler
			$('.change-status-btn').on('click', function() {
				const orderId = $(this).data('order-id');
				$('#orderIdForStatus').val(orderId);
				$('#changeStatusModal').modal('show');
			});

			// Save Status Button Click Handler
			$('#saveStatusBtn').on('click', function() {
				// Here you would normally send an AJAX request to update the status
				// For demonstration purposes, we'll just close the modal
				$('#changeStatusModal').modal('hide');

				// Show success notification
				showNotification('Order status updated successfully', 'success');
			});

			// Toggle Payment Status Button Click Handler
			$('.toggle-payment-btn').on('click', function() {
				const orderId = $(this).data('order-id');
				const isPaid = $(this).data('is-paid') === 'true';

				// Here you would normally send an AJAX request to update the payment status
				// For demonstration purposes, we'll just show a notification
				const message = isPaid ? 'Order marked as unpaid' : 'Order marked as paid';
				showNotification(message, 'success');

				// In real implementation, you would refresh the table after successful update
			});

			// Delete Order Confirmation Handler
			$('#confirmDeleteBtn').on('click', function() {
				const orderId = $('#orderIdToDelete').val();

				// Send AJAX request to delete the order
				$.post('/Admin/Operations/DeleteOrder', { orderId: orderId })
					.done(function() {
						$('#deleteOrderModal').modal('hide');
						showNotification('Order deleted successfully', 'success');
						// Reload the page after successful deletion
						setTimeout(function() {
							window.location.reload();
						}, 1000);
					})
					.fail(function() {
						showNotification('Failed to delete order', 'error');
					});
			});

			// Filter options handler
			$('.filter-option').on('click', function(e) {
				e.preventDefault();

				const statusFilter = $(this).data('status');
				const paymentFilter = $(this).data('payment');

				ordersTable.draw();

				// Custom filtering function
				$.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
					const $row = $(ordersTable.row(dataIndex).node());
					const rowStatus = $row.data('status');
					const rowPayment = $row.data('payment');

					// Filter by status if specified
					if (statusFilter && statusFilter !== 'all' && rowStatus !== statusFilter) {
						return false;
					}

					// Filter by payment if specified
					if (paymentFilter && rowPayment !== paymentFilter) {
						return false;
					}

					return true;
				});

				// Apply the filter
				ordersTable.draw();

				// Remove the filter function after drawing
				$.fn.dataTable.ext.search.pop();
			});

			// Utility function to show notifications
			function showNotification(message, type) {
				const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
				const icon = type === 'success' ? 'check-circle' : 'exclamation-triangle';

				const notification = `
					<div class="alert ${alertClass} alert-dismissible fade show" role="alert">
						<i class="bi bi-${icon} me-2"></i>${message}
						<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
					</div>
				`;

				// Append notification to top of table
				$('#ordersTable_wrapper').prepend(notification);

				// Auto-dismiss after 3 seconds
				setTimeout(function() {
					$('.alert').alert('close');
				}, 3000);
			}

			// Print Invoice Handler
			$('.print-invoice-btn').on('click', function() {
				const orderId = $(this).data('order-id');
				// In a real implementation, you might redirect to a print view or open a new window
				window.open(`/generate-order-pdf/${orderId}`, '_blank');
			});
			// Refresh Button Handler
			$('#refreshOrdersBtn').on('click', function() {
				// In a real implementation, you would reload data from the server
				// For demonstration, we'll just show a notification
				showNotification('Orders refreshed', 'success');
			});

			// Set Order ID when delete modal is opened
			$('#deleteOrderModal').on('show.bs.modal', function (event) {
				const button = $(event.relatedTarget);
				const orderId = button.data('order-id');
				$('#orderIdToDelete').val(orderId);
			});
		});
	</script>
}